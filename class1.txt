Q. What is the purpose of learning programming language?
Ans: 
	to talk with computer
	s/w develop
	application

- different types of application we develop in java?

Network application: these application are used in client/ server environment.
	these are mainly used in Org. where data has to be referred / shared with others.
	eg: banking s/w
		insurance s/w

Web application: these application are used in internet 
	eg: All website(Web application)

Desktop application: these application are used in local system only.
	eg: Notepad, office, tools, .....
	Billing S/W

mobile application: These application are used in mobile.
	Ex: all mobile apps.

Device Application: these application are used for activation of electronic devices.
	Ex: Device Drivers.
to develop these all types of applications use java, dotnet..... are useful.


what is java?
it is a general purpose and object oriented programming language used to develop different types of applications. 

3 section in java
- core java - j2se - java 2 standard edition
	all the language funda's
- adv. Java - J2EE - Java 2 Enterprise edition 
	it is meant for developing application.
- J2ME - Java 2 Micro Edition
	it is meant for developing Mobile application

latest stable version of java: 21 LTS

all java update/s/w can be downloaded from Oracle

For learning any programming language:-
Tokens: variables, constants, keywords, operators.
Data Type:

------------------------------------------------------
# class 2


variables: It is named memory location to store values temply.
	these are having a facility to modify values whenever required.

rules for naming:- 
- name must be one word
- it should start with either alphabet / _ (underscore)
- name must have alphanumeric.

constants: These are one type of variable which will not allow to modify it's value once it is assigned.

keywords: These are the reserved words of the programming language which is having specific action/ meaning.

java has 50+ keywords: char, byte, int, short, double, long, float, if, else, while, for, case.

Data Type:- 
Primitive: provided by the programming language
	Number based: all the numbers can grouped by dividing into two parts
		Integer:- all the whole numbers
			keywords: byte, short, int, long
		decimal:- Numbers having decimal portion
			keywords: float, double
		
	Text bases: all character is called as text/string.
		these are 2 types:
		character: either single alphabet/ single digit/ single symbol
		characters enclosed in single quotes ('  ')
			keyword: char
		string:- Collection of characters
			values are enclosed in ("  ")

	Boolean: it allows us only 2 values true/ false
		keyword: boolean
		

Non Primitive (user defined): these are created and used by the developer
	keywords: enum, class, array, interface ......

download and install java
eclips idle


structure java:

importing package

class <Classname>
{
	public static void main(String [] args)
	{
		body of the program
	}
}

---------------------------------------------------

class 3 notes
function is used to solve a task.
function is predefined world which has specific action. 
it predefined instruction to perform any task. 
these instruction will be written in a specific files called as library.

c, cpp library files are called as header files.
#inclued conio.h
#include stdio.h

in java these are called as package.

1. packages: these are the library files for the java
	usually a package is called as set of classes. and a class is consist of set of functions.

import "package name"

import java.io.*; //* represents all classes.
import java.io.Console; //import a specific class.

java.sql, java.lang, java.util ......

2. Every java program start with "class" and identified by a class name.

3. main():- the program execution starts with the main() method.

4. void:- it specify that main() is not returning any value.

5. static:- while calling a method to avoid object, than method starts with static.

6. public:- to access class members outside the class, we use public.

7. String[] args:- which explains in a concept of "command line arguments"l

once method/function is created, to get output of that function we have to call that function in other function. 
main() method will be called by the compiler.

output statements:
	System.out.println():- it is use to print statement / variable value line by line
	System.out.print():- it is use to print statement / variable value side by side.


notepad: first compile it (javac projectname.java)
	second just run the java program(java projectname.java)


-----------------------------------------------

Class 4
How to create a variable?
	<data type> <variable name> [=<value>]
		<...> = must be used 
		[...] = optional (may or may not)

	int x = 100; [right to left]
for every variable, following properties are existed.
	- Name
	- value
	- address
	- Capacity(min val - max value)
	- size of memory

	eg: int x = 100;
	float y = 12.45;
	char ch = 'A'

when ever you are using float data type use f at the end of the value. because it is treating it as double type.

How to create a constant variable?
	final <data type> <variable name> = <value>;
	
eg: final float pi= 3.14;


Operator:- there are the symbols which has some action b/w operands.

c=a+b
operand= the value on which operation is performed. (a,b,c)
operators= the symbol that is used to perform the operation (=, +)

Arithematic operator: these are used to perform mathemaical calculation.
+(add), -(minus), *(multiplicaion), /(division), %(div- remainder)

Relational Operators:  These are used to check the condition.
>,<,>=,<=,!=(not equals), ==(equals)
Note: the answer always going to be in bool value  (True/Fales)

Logical Operators: These are used b/w conditions when multiple conditions are checking.
Note: the answer always going to be in bool value  (True/Fales)
&& (AND): All condition must be true.
|| (OR):  any one condition must be true.
!  (NOT): if condition is true it returns false and vice versa.

AND Truth Table

A	B	R
T	T	T
T	F	F
F	T	F
F	F	F


OR Truth Table
A	B	R
T	T	T
T	F	T
F	T	T
F	F	F		

NOT truth table
A	R
T	F
F	T


Assignment Operators: These are used to assign value to the variable / results of expressions are also assigned variables.

=(Assigning values) +=, -=, /=, *=, %=

int x=10;
int y=20;

x=y // x and y are value 20
y=x // x and y are value 10

int z = x+y; // z value is 30

x=x+10; // mathematical equation
x+=10; // prog equation

Unary Operators: these are used to increase / decrease value by 1.
	++ increase / increment by 1
	-- decrease / decrement by 1
x = x+1 (or) x++ 
x = x-1 (or) x--

classified into 2 type
- pre increment: ++x (first increase/decrease then print)
- post increment: x-- (fist print then increase/decrease)

int x=10;
int y= x++;
sysout(y);
----------------------------------------
class 4

conditional operator: These are used to check conditions.
? :
	(<condition> ? <true>:<false>)

concatenation operator: these are used to concatenate any to stings or trying with other values.
+  = for concatenation two string 

JDK JVM and JRE

JDK = jvm + jre (combination of development tools and the set of library)

JRE: Java Runtime Environment
It will provide run time environment for java programs based on type of application.
	ie. provide library for the program

JVM: Java Virtual Machine
	it is an execution engine for java, it will take care entire program execution JVM basically consist of different operating systems to provide environment.

OS:
windows
Unix
Linux
mac os
android


Type casting or Type conversion:
the process of converting values from one data type to another data type.

two type of type casting
- implicit: here converting process will be taken from lower data type to higher data type.
	double -> long -> float -> int -> short -> byte

- explicit: here converting process with be taken from higher data type to lower data type.
	here we have to write addition statements to convert values.

how to input values dynamically:

Scanner Class: this class is used to input values into variable dynamically(at the time of program execution).

- import java.util.Scanner package at the top of the program.
- Create object for the scanner class as follows within the main()
	Scanner <object> = new Scanner(System.in)
	System.in => represents Keyboard.
- read values into different data type.
	byte = nextByte()
	short = nextShort()
int = nextInt()
long = nextLong()
float = nextFloat()
double = nextDouble()
char = nextCharacter()
String = next() / nextLine()
syntax
variable = object.methodName()

Calculate Area of circle : Area = PI*r*r
PI = 3.14  (use it as constant)
r that should be taken by user

-----------------------------------------
class 4

Control statements
these are the statements used to control the flow of program execution.
	- Conditional
	- Branching
	- Looping

Conditional: These are used check condition based on condition True/false some statements will be executed.
"if" statement is used to check condition.

simple if:
------------
if(condition)
{
	set of statements
}		


If-Else-
-------
if(condition)
{
	set of statements
}
else
{
	set of statement
}

// accept a number and check is it +ve or -ve


else-if
-------
if(condition)
{
	set of statements
}
else if(cond-2)
{
	set of statement
}
------------
--------------
--------------
---------
[else
{
	set of default statement
}]



Nested if
-----------
a if condition within another if condition.

if(condi-1)
{
	if(condi-2)
	{
		----------
	}
}

//Accept person age and gender, then check marriage eligibility
// male: age>= 21 and gender=male
// female: age >=18 and gender = female


equal("male") = male (correct)   Male (wrong)
equalsIgnoreCase("Male")  = male(correct)   Male(correct)  MALE(correct)
	MaLE(correct)


---------------------------------------
Class 5

Branching Statements: (Switch case statement)
This is used to check multiple conditions on single variable whether values is equal or not.	

switch(variable)
{
	case <vale-1>:
		set of stmts
		break;
	case <val -2>:
		set of stmts
		break;
	-------
	--------
	--------
	default:
		set of stmt
		break;
}

you can use the read() for taking the input just a char and return it's ascii value
exception raise.

Loops:- the process of repeating a task for n number of times.
if condition is true it will continue the loop once false it will end the loop.
- while loop
- do while loop
- for loop
- foreach

while loop: this loop repeats its task until the given condition is true.

variable inital value
while(condition){
	set of stmt
	increment/decrement operator 
} 

Note: for any loop we need separate variable(initial value, condition, termination).


H/W:
1: accept the number then print it's factorial value
	// 5!=5x4x3x2x1 = 120

2: Accept the number then print it's reverse number
	// 123 = 321


--------------------------------------------------------
Class 8
For loop:- it is same as while loop but initialization, condition and iteration comes in a single line.

for(initialization; condition; iteration)
{
	set of statements
}

H.W
1. Accept the number then print it's reverse number
	// 123 = 321


do-while loop: it is also as same as while loop but condition will be checked at the end of the loop.

variable initial value
do
{
	set of stmt
	increment/decrement
}
while(condition);

NOTE: if condition is false for the first time, while loop rotate task 0 times whereas do while rotates one time.

------------------------------------------------
class 9:
- Nested loop
a loop within another loop is called as nested loop.
Purpose: To repeat looping process for n number of time.
  
H.W

1 0 0
0 1 0
0 0 1
------------
5 4 3 2 1
4 3 2 1
3 2 1
2 1
1
------------
1
1 2
1 2 3
1 2 3 4
1 2 3
1 2
1
-------------
1 2 3 4
1 2 3
1 2
1
1 2
1 2 3
1 2 3 4
-----------------
print all prime numbers b/w 1-100
----------------------------------------------------

Arrays:-
It is a variable which allows to store multiple value of specific data type. (Same type of data)

Types of array: (array are of 3 types)
- single dimensional array
- Double/ 2d /multi dimensional array
- Jagged Array

Single Dimensional Array: the process of arranging values either in single row / single column.

initialization process: <data type> <variable>[] = {val1, val2, ....}
	int x[] = {10,20,30,40,50,60};

Array provide to access each value, some numeric values called as index.
	index starts from 0,1,2,3.....

	arrayname[index] = to get value / to set new value

	dynamic process: <data type> <variable>[] = new <data type>[size];
		int x[] = new int[5];

-----------------------------------------------
class 10

Double dimensional array: the process of arranging the values in no of rows and no of columns. 

1 2 3 
4 5 6
7 8 9

Initialization process:-
	<data type> <variable>[][] = {{val1,val2},{val1,val2},......};
	int x[][]={{10,20,30},{40,50,60}};

index always starts from 0

arryname[row index][col index] = to get value/ to set value
	x[0][0] = 10
	x[0][1] = 20
	x[0][2] = 30

	x[1][0] = 40
	x[1][1] = 50
	x[1][2] = 60


Dynamic process
	<data type> <var> [][] = new <dataType> [row][col];
	int x[][] = new int [3][3];

--------------------------------------
Class 11

Jagged Array: this is one type of multi dimensional array but here no of rows are fixed and in every row different no of columns are exist.

<data type>[] <var>[]={{v1,v2,v3...},{v4,v5,.....},{..}.......};
int x[][] = {{10,20,30},{40,50},{60,70,80,90}};

Here also maintains index numrs but each row and col having index no starting from 0,1,2,3,....

Dynamic process
	<data type> <var>[][] = new <data type> [row][];
for column specific
	var[row size] = new <data type>[no of col];

it has to repat for n number of row
	int x[][] = new int [3][];
	x[0]=new int [3];
	x[1]=new int [4];
	x[2]=new int [2];


H.W
- Accept values in 3x3 matrix then print it's transpose matrix
row will become col 
col will become row

- Write a program to extract all even number from double dimensional array, then add those values into single dimensional array, then print

- write a program to multiply the matrix

String:- It is a collection of characters/ Array of characters.
- string should always enclosed with in double quotes (" ")
- To declare string var "String" class is used.
- String class is an immutable class. The value assigned in string variables can not be modified.
- characters nothing but an alphabet/ a digit/ a symbol.
- String value ends with null(\0) value.

String <var> = "value";
String str = "java";
String adrs= "Door no: 607, abc soc";

String Functions:- 
- toUpperCase() : it coverts string into upper case letter
- toLowerCase() : it coverts string into lower case letter
- length(): to count no of char into a string.
- charAt(index) : it will print a character from string based on index number.

---------------------------------
Class 12

- equal():- it check given 2 string are same or not.
- equalIgnoreCase():- it is as same as equal() but it ignores case sensitive.
- compareTo():- it allows use to compare two string to find which is big/small/equals.
	fist string bigger than second string return >0
	fist string small than second string return < 0
	if values are same return 0
- compareToIgnoreCase():- same as compareTo() but it ignore the case sensitive.
- concat():- concatenate two string
- contains():- search a substring within the string.

HW
- count the following items from string
	no of alphabets
	no of digits
	no of symbols
	no of space

User defined methods / Function:- 
	every programming language is a function base language
2 type of functions
- pre-defined: these function are given by the prog. language.
- user defined: these function are created and used by the developer/ user as per the requirement.

Purpose of user defined method/functions.
- to avoid the complexity of the program
- to implement the OOPs programming
- Reusability of code.

2 steps to define methods
1. Method Define: process of creating a method with a task.
	<return type> <method name>([arguments]){
		body of the method
	}
- Methods name must be only one word.
- arguments are the var which receives values at the time of calling a method.
	these are may or may not have methods.
	a method can take any number of arguments.
- return type is a type where a method is providing final result of the method process.
methods won't return any value, at that time method starts with "void" keyword.

NOTE:- A function can be defined either above/ below of the main() method.

4 ways of defining the function 
- without argument and without return type
	void Sample(){
		............
	}
- with argument and without return type
	void Sample(int x, float y){
		...............
	}
- with argument and with return type
	float Sample(int x, float y){	
		..........
		return <expression/value>
	}
- without argument and with return type
	int Sample(){
		...........
	}

2. Method calling
	method_name([arguments value]);

	a function called with in another function 
	usually main() method.
















